//Swaraj Ambawade 23CO008
#include <iostream>
#include <string>
using namespace std;

class TreeNode {
public:
    string name;
    TreeNode* firstChild;
    TreeNode* nextSibling;

    TreeNode(string name) {
        this->name = name;
        this->firstChild = NULL;
        this->nextSibling = NULL;
    }

    void addChild(TreeNode* child) {
        if (!firstChild) {
            firstChild = child;
        } else {
            TreeNode* temp = firstChild;
            while (temp->nextSibling) {
                temp = temp->nextSibling;
            }
            temp->nextSibling = child;
        }
    }

    void printTree(int level = 0) {
        for (int i = 0; i < level; i++) cout << "  "; 
        cout << name << endl;
        if (firstChild) firstChild->printTree(level + 1);
        if (nextSibling) nextSibling->printTree(level);
    }
};

TreeNode* createNode(string name) {
    return new TreeNode(name);
}

int main() {
    TreeNode* book = createNode("Book: Computer Science");

    int choice;
    TreeNode* chapter = NULL;
    TreeNode* section = NULL;
    
    do {
        cout << "\nMenu:\n";
        cout << "1. Add Chapter\n";
        cout << "2. Add Section to Chapter\n";
        cout << "3. Add Subsection to Section\n";
        cout << "4. Display Book Structure\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(); 

        string name;
        switch (choice) {
            case 1:
                cout << "Enter Chapter Name: ";
                getline(cin, name);
                chapter = createNode("Chapter: " + name);
                book->addChild(chapter);
                break;

            case 2:
                if (!chapter) {
                    cout << "First add a chapter!\n";
                    break;
                }
                cout << "Enter Section Name: ";
                getline(cin, name);
                section = createNode("Section: " + name);
                chapter->addChild(section);
                break;

            case 3:
                if (!section) {
                    cout << "First add a section!\n";
                    break;
                }
                cout << "Enter Subsection Name: ";
                getline(cin, name);
                section->addChild(createNode("Subsection: " + name));
                break;

            case 4:
                cout << "\nBook Structure:\n";
                book->printTree();
                break;

            case 5:
                cout << "Exiting program...\n";
                break;

            default:
                cout << "Invalid choice! Try again.\n";
        }
    } while (choice != 5);
    return 0;
}
